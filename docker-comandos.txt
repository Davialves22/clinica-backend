docker-compose up -d

mvn clean package

mvn clean package -DskipTests

mvn clean package -DskipTests


docker-compose up --build

 Acessos:
App Spring Boot: http://localhost:8080

phpMyAdmin (para gerenciar o banco): http://localhost:8081

Login: root

Senha: root

Se voc√™ j√° gerou o .jar uma vez com -DskipTests e o seu Dockerfile s√≥ copia esse .jar, voc√™ n√£o precisa rodar mvn package de novo a cada docker-compose up.

Exemplo:
bash
Copiar
Editar
# 1. Gera o .jar (uma vez)
mvn clean package -DskipTests

# 2. Sobe tudo normalmente
docker-compose up --build

docker pull phpmyadmin/phpmyadmin
docker pull mysql

üßπ 2. Fa√ßa pr√©-download manual das imagens (baixa uma vez e usa depois):
docker pull openjdk:17-slim
docker pull mysql:8.0
docker pull phpmyadmin/phpmyadmin
Depois rode:

docker-compose up --build

Com tudo rodando, acesse:

üëâ http://localhost:8081

Servidor: mysql (j√° que est√° no mesmo docker-compose)

Usu√°rio: root

Senha: root


Coloque o Dockerfile, o docker-compose.yml e o application.properties configurados conforme acima no seu projeto.

Na pasta do projeto rode:

bash
Copiar
Editar
docker-compose up --build
Aguarde os containers subirem.

Acesse:

Adminer em http://localhost:8081 (usu√°rio root, senha root)

Sua aplica√ß√£o em http://localhost:8080

Sistema: PostgreSQL

Servidor: postgres

Usu√°rio: postgres

Senha: conforme definido no docker-compose.yml

Banco: o nome que voc√™ colocou no POSTGRES_DB

Se der erro de conex√£o, me envie seu trecho do docker-compose.yml do adminer e do postgres.